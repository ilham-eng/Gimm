name: Persistent Server

on:
  workflow_dispatch:
  push:
    branches: [ main ]

jobs:
  deploy-server:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        
    - name: Create package.json
      run: |
        cat << "JSON" > package.json
        {
          "name": "gimm-server",
          "version": "1.0.0",
          "description": "Persistent server for GitHub Actions",
          "main": "server.js",
          "scripts": {
            "start": "node server.js"
          },
          "dependencies": {
            "express": "^4.18.2"
          }
        }
        JSON
        echo "✅ package.json created"
        
    - name: Install dependencies
      run: |
        npm install
        echo "✅ Dependencies installed"
        
    - name: Create server.js
      run: |
        cat << "JAVASCRIPT" > server.js
        const express = require('express');
        const fs = require('fs').promises;
        const path = require('path');

        const app = express();
        const PORT = 3000;

        app.use(express.json());

        let visitorCount = 0;
        const messages = [];

        app.get('/', (req, res) => {
          visitorCount++;
          res.json({
            message: '🚀 Server is running successfully!',
            visitors: visitorCount,
            totalMessages: messages.length,
            timestamp: new Date().toISOString(),
            status: 'active'
          });
        });

        app.get('/messages', (req, res) => {
          res.json({
            messages: messages,
            count: messages.length
          });
        });

        app.post('/messages', (req, res) => {
          const { text, author = 'Anonymous' } = req.body;
          
          if (!text) {
            return res.status(400).json({ error: 'Text is required' });
          }

          const newMessage = {
            id: Date.now(),
            text: text,
            author: author,
            timestamp: new Date().toISOString()
          };

          messages.push(newMessage);

          res.json({
            success: true,
            message: 'Message saved successfully!',
            data: newMessage,
            totalMessages: messages.length
          });
        });

        app.get('/status', (req, res) => {
          res.json({
            status: '🟢 Online',
            visitors: visitorCount,
            messages: messages.length,
            uptime: process.uptime(),
            memory: process.memoryUsage()
          });
        });

        app.listen(PORT, () => {
          console.log('✅ Server running on port ' + PORT);
          console.log('📊 Endpoints available:');
          console.log('   GET  /');
          console.log('   GET  /messages');
          console.log('   POST /messages');
          console.log('   GET  /status');
        });
        JAVASCRIPT
        echo "✅ server.js created"
        
    - name: Start and test server
      run: |
        echo "🔧 Starting server..."
        npm start &
        
        echo "⏳ Waiting for server to start..."
        sleep 5
        
        echo "🧪 Testing server endpoints..."
        
        # Test home endpoint
        echo "📡 Testing / endpoint..."
        curl -f http://localhost:3000
        
        echo ""
        
        # Test status endpoint
        echo "📊 Testing /status endpoint..."
        curl -f http://localhost:3000/status
        
        echo ""
        
        # Test message posting
        echo "💬 Testing message posting..."
        curl -X POST http://localhost:3000/messages \
          -H "Content-Type: application/json" \
          -d '{"text":"Hello from GitHub Actions!", "author":"GitHub Bot"}'
          
        echo ""
        echo "✅ All tests completed"
