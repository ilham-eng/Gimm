name: Cordova Android Build

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:  # Memungkinkan manual trigger

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        
    - name: Setup JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        
    - name: Setup Android SDK
      uses: android-actions/setup-android@v3
      
    - name: Install Cordova
      run: |
        npm install -g cordova@latest
        cordova telemetry off
        cordova --version
        
    - name: Install project dependencies
      run: |
        npm install
        cordova platform add android@latest
        
    - name: Build Android APK (Debug)
      run: |
        cordova build android --debug
        echo "‚úÖ Debug APK built successfully"
        
    - name: Build Android APK (Release)
      run: |
        cordova build android --release
        echo "‚úÖ Release APK built successfully"
        
    - name: List generated APKs
      run: |
        echo "üì± APK Files:"
        find platforms/android -name "*.apk" -type f | while read file; do
          echo "‚û°Ô∏è $file"
          ls -la "$file"
        done
        
    - name: Upload APK artifacts
      uses: actions/upload-artifact@v4
      with:
        name: cordova-apks
        path: |
          platforms/android/app/build/outputs/apk/debug/
          platforms/android/app/build/outputs/apk/release/
        retention-days: 30
        compression-level: 9
        overwrite: true
        
    - name: Show success message
      run: |
        echo "üéâ Build berhasil!"
        echo "üì• Download APK dari tab 'Artifacts' di atas"
        echo "‚è∞ APK akan tersimpan selama 30 hari"        
    - name: Install project dependencies
      run: |
        npm install
        cordova platform add android
        
    - name: Build Android APK (Debug)
      run: |
        cordova build android --debug
        echo "Debug APK built successfully"
        
    - name: Build Android APK (Release)
      run: |
        cordova build android --release
        echo "Release APK built successfully"
        
    - name: List generated APKs
      run: |
        find platforms/android -name "*.apk" -type f
        
    - name: Upload APK artifacts
      uses: actions/upload-artifact@v3
      with:
        name: cordova-apks
        path: |
          platforms/android/app/build/outputs/apk/debug/
          platforms/android/app/build/outputs/apk/release/
        retention-days: 30
        
    - name: Upload to Google Drive (Optional)
      run: |
        echo "APK tersedia di tab Artifacts di GitHub"
        echo "Atau setup rclone untuk upload otomatis ke cloud"
